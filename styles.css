* {
  box-sizing: border-box;
}

body {
  margin: 0;
  font-family: system-ui, sans-serif;
  color: black;
  background-color: white;
}

.bounds {
  height: 300px;
  width: 800px;
  position: absolute;
}
.parent {
  position: absolute;
  inset: 0;
}
table {
  --border-width: 0.5px;
  border-spacing: 0;
  border-collapse: separate; /* This is important!!! */
}
th,
td {
  border: var(--border-width) solid lightblue;
  position: sticky;
  padding: 0;
}
:is(th, td):not(:last-child) {
  width: 100px;
}
:is(th, td):last-child {
  position: relative;
}
:is(th, td):nth-child(1) {
  left: 0;
}
:is(th, td):nth-child(2) {
  left: 100px;
}
:is(th, td):nth-child(3) {
  left: 200px;
}

.bar-wrapper {
  --offset-left: calc(var(--timeline-width) * var(--bar-left-ratio, 0));
  --offset-right: calc(var(--timeline-width) * var(--bar-right-ratio, 0));

  position: sticky;
}
.bar-wrapper:not([start]):not([end]) {
  --start-color: transparent;
  --end-color: transparent;
  /* left: calc(var(--timeline-offset) + var(--border-width)); */
}
.bar-wrapper[start]:not([end]) {
  --start-color: purple;
}
.bar-wrapper[end]:not([start]) {
  --end-color: lime;
}
.bar-wrapper[start][end] {
  --start-color: blue;
  --end-color: blue;
}
.label,
.bar {
  position: relative;
}
.label {
  position: sticky;
  left: max(
    calc(var(--timeline-offset) + var(--offset-left, 0px) - var(--scroll-x)),
    var(--timeline-offset)
  );
}
.bar {
  --start-color: red;
  --end-color: red;
  --start-gradient-distance: 30px;
  --end-gradient-distance: 30px;
  /* IMPORTANT: positioned relative to the width of the timeline, rather than width of bar */
  /* left: var(--offset-left); */
  /* right: var(--offset-right); */

  display: block;
  /* background: linear-gradient(
    to right,
    var(--start-color) calc(var(--offset-left, 0px) + var(--scroll-x)),
    red calc(var(--offset-left, 0px) + 30px + var(--scroll-x)),
    red calc(100% - var(--offset-right, 0px) - 30px + var(--scroll-x)),
    var(--end-color) calc(100% - var(--offset-right, 0px) + var(--scroll-x))
  ); */
  background: linear-gradient(
    to right,
    var(--start-color) var(--start-gradient-offset),
    red calc(var(--start-gradient-offset) + var(--start-gradient-distance)),
    red calc(var(--end-gradient-offset) - var(--end-gradient-distance)),
    var(--end-color) var(--end-gradient-offset)
  );

  height: 12px;
  position: relative;
}

.bar:not([start]) {
  --start-color: transparent;
  --start-gradient-offset: calc(var(--offset-left) + var(--scroll-x));
}
.bar:not([end]) {
  --end-color: transparent;
  --end-gradient-offset: calc(
    var(--parent-width) - var(--timeline-offset) + var(--scroll-x) -
      var(--offset-left)
  );
}

.bar:not([start]):not([end]) {
  /* --start-gradient-offset: calc(var(--offset-left) + var(--scroll-x)); */
  /* --end-gradient-offset: calc(
    var(--parent-width) - var(--timeline-offset) + var(--scroll-x)
  ); */
}
.bar[start],
.bar[end] {
  --bar-width: calc(
    var(--timeline-width) - var(--bar-left-percent, 0%) -
      var(--bar-right-percent, 0%)
  );
  width: var(--bar-width);
}
.bar[start] {
  left: var(--offset-left);
}
.bar[start]:not([end]) {
  --start-gradient-offset: 0px;
  --start-gradient-distance: 0px;
}
.bar:not([start])[end] {
  --end-gradient-offset: 0px;
  /* --end-gradient-distance: 0px; */
}

.bar:not([start]):not([end]) {
  /* left: var(--scroll-x); */
}
.bar[start]:not([end]) {
  --start-color: purple;
}
.bar[end]:not([start]) {
  --end-color: lime;
  /* --offset-left: var(--scroll-x); */
}
.bar[start][end] {
  --start-color: blue;
  --end-color: blue;
}

.timeline-inner {
  display: flex;
}
.timeline-inner > * {
  flex-grow: 1;
}
.timeline-inner > *.visible {
  background: lime;
}
